@model ShauliBlogMvc.Models.Post

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = " col-md-2 input-color" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = " col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SiteOfAuthor, htmlAttributes: new { @class = " col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SiteOfAuthor, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.SiteOfAuthor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = " col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, 5, 40, new { htmlAttributes = new {@class = "form-control", required="required"}})
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = " col-md-2" })
            <div class="col-md-10">
                @Html.CheckBox("addImageCheckbox", false)
               <input  type="file" id="image" name="image" disabled/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = " col-md-2" })
            <div class="col-md-10">
                @Html.CheckBox("addVideoCheckbox", false)
                <input type="file" id="video" name="video" disabled />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                <button onclick="postStatusToFacebook()" style="background-color:cornflowerblue" 
                        title="post the content of the post to facebook" >
                 Post on facebook 
                </button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/Post/post_create.js")

}


@section css {
    <link href="@Url.Content("~/Content/Post/post_create.css")" rel="stylesheet" />
}

