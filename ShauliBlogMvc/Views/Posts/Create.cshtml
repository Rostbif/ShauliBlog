@model ShauliBlogMvc.Models.Post

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = " col-md-2 input-color" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = " col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SiteOfAuthor, htmlAttributes: new { @class = " col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SiteOfAuthor, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.SiteOfAuthor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = " col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, 5, 40, new { htmlAttributes = new {@class = "form-control", required="required"}})
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = " col-md-2" })
            <div class="col-md-10">
                @Html.CheckBox("addImageCheckbox", false)
               <input  type="file" id="image" name="image" disabled/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = " col-md-2" })
            <div class="col-md-10">
                @Html.CheckBox("addVideoCheckbox", false)
                <input type="file" id="video" name="video" disabled />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                <button onclick="postStatusToFacebook()" style="background-color:cornflowerblue"> Post on facebook </button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/Post/post_create.js")
    <script>
        $("document").ready(function () {

            window.fbAsyncInit = function () {
                FB.init({
                    appId: '317961218577920',
                    xfbml: true,
                    version: 'v2.8'
                });
            };

            (function (d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) { return; }
                js = d.createElement(s); js.id = id;
                js.src = "//connect.facebook.net/en_US/sdk.js";
                fjs.parentNode.insertBefore(js, fjs);
            }(document, 'script', 'facebook-jssdk'));


        });

        function postStatusToFacebook() {

            // get the the post text
            var element = document.getElementById("Content");
            var value = element.value;

            // show the facebook login pop up (if there is no a valid token)
            FB.login(function () {

                // get the page acess token
                FB.api('/349841955355640', 'get', { fields: "access_token" },
                    function (response) {
                        // then publish a post with the post text , and add the page access token
                        FB.api('/349841955355640/feed', 'post', { message: value, access_token: response.access_token },
                                function (response) {
                                    // log the response (will be the id of the post if succeeded
                                    console.log(response);
                                });
                        // log the access token request response.
                        console.log(response);
                    });
                // in order to ask for the page access token we add to the request the manage_pages permission
            }, { scope: 'manage_pages' });
        }
</script>

}


@section css {
    <link href="@Url.Content("~/Content/Post/post_create.css")" rel="stylesheet" />
}

