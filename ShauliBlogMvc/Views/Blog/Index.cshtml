@model IEnumerable<ShauliBlogMvc.Models.Post>

@{
    ViewBag.Title = "Blog";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2> Blog </h2>


<!-- Search -->
<section>
    <h1> Search	</h1>

    <div class="searchContainer">
        @using (Html.BeginForm("Index", "Blog", FormMethod.Get, new { @class = "searchBar" }))
        {
            <div class="searchBar">
                <label> Date:</label>
                <input name="publishDate" type="date" placeholder="Choose date..." />
                <label> Author Name: </label>
                <input name="authorName" type="text" placeholder="insert author name..." />
                <label> Site Of Author: </label>
                <input name="siteOfAuthor" type="url" placeholder="insert author site..." />
                <label> Words From post: </label>
                <input name="wordsFromPost" type="text" placeholder="insert words from the post..." />
                <label> Minimal Comments: </label>
                <input name="minimalComments" type="range" min="0" max="10" />
                <input type="submit" value="search" />
            </div>
        }

    </div>
</section>

@if (!Model.Any())
{
    <div> There was no results </div>
}
else
{
    foreach (var item in Model)
    {
        var commentNum = "comments" + item.ID;
        <div>
            <section>
                <article class="blogPost">
                    <header>
                        <h2> @item.Title </h2>
                        <p>Posted on <time datetime="@item.PublishDate">@item.PublishDate</time> by <a href="#">@item.Author</a> - <a href="#@commentNum">@item.Comments.Count comments</a></p>
                    </header>
                    <div>
                        <p> @item.Content </p>
                        @{
                            if (item.Image != null)
                            {
                                string imageBase64 = Convert.ToBase64String(item.Image);
                                string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                                <div>
                                    <img src="@imageSrc" width="100" height="100" alt="Image" />
                                </div>
                            }
                        }
                        @{
                            if (item.Video != null)
                            {
                                string videoBase64 = Convert.ToBase64String(item.Video);
                                string videoSrc = string.Format("data:image/gif;base64,{0}", videoBase64);
                                <div>
                                    <video width="100" height="100" alt="Image" controls>
                                        <source src="@videoSrc" type="video/mp4" />
                                        <source src="@videoSrc" type="video/ogg" />
                                        Your browser doesnt support the video tag of html5
                                    </video>
                                </div>
                            }
                        }
                    </div>
                </article>
            </section>

            <section id="@commentNum">
                <h3>Comments</h3>
                @{
                    foreach (var comment in item.Comments)
                    {
                        <article>
                            <header>
                                <a href="@comment.SiteOfAuthor">@comment.AuthorName</a>
                            </header>
                            <p> @comment.Content </p>
                        </article>
                    }
                }
            </section>

            @using (Html.BeginForm("addComment", "Blog", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <h3>Post a comment</h3>
                <input type="hidden" name="postId" value="@item.ID" />
                <p>
                    <label for="Title">Title</label>
                    <input name="title" id="title" type="text" required />
                </p>
                <p>
                    <label for="authorName">Author Name</label>
                    <input name="authorName" id="authorName" type="text" required />
                </p>
                <p>
                    <label for="website">Website</label>
                    <input name="website" id="website" type="url" />
                </p>
                <p>
                    <label for="commentText">Comment Text</label>
                    <textarea name="commentText" id="commentText" rows="5" cols="40" required></textarea>
                </p>
                <p><input type="submit" value="Post comment" /></p>
            }
        </div>
    }
 }
